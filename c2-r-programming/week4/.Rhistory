if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
stateData[min(stateData[, colName]) == stateData[, colName], hospitalTitle]
stateData[order(colName), ]
stateData
stateData[order(stateData$colName), ]
stateData[order(stateData[,colName]), ]
stateData[order(stateData[,colName]), ][4]
aa <- stateData[order(stateData[,colName]), ]
aa[4,]
aa[4,1]
aa <- stateData[order(stateData[,colName]), ]
head(aa)
aa <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
head(aa)
aa[4,1]
rank <- function(state, outcomeName, rank) {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!state %in% unique(outcome$State)) {
stop("invalid state.")
}
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
s[rank, hospitalTitle]
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
rankhospital <- function(state, outcomeName, rank) {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!state %in% unique(outcome$State)) {
stop("invalid state.")
}
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
s[rank, hospitalTitle]
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
rankhospital("TX", "heart attack", 4)
rankhospital("MN", "heart attack", 4)
s
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
s
length(s)
dim(s)
dim(s)[1]
num <- "best"
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
rank
rank
num <- "worst"
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
rank
num <- 35
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
rank
rank
rankhospital <- function(state, outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!state %in% unique(outcome$State)) {
stop("invalid state.")
}
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
s[rank, hospitalTitle]
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
result <- lapply(states, function (state) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
c(s[rank, hospitalTitle], state)
})
result
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
head(rankhospital("heart attack", 20), 10)
rankhospital <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
result <- sapply(states, function (state) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
c(s[rank, hospitalTitle], state)
})
result
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
head(rankhospital("heart attack", 20), 10)
rankhospital <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
result <- lapply(states, function (state) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
c(s[rank, hospitalTitle], state)
})
result
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
df <- data.frame("hospital", "state")
df
df <- rbind(df, c("AAA", "TX"))
df <- data.frame("hospital" = character, "state" = character,)
df <- data.frame(hospital = character(0), state = character(0))
df
df <- rbind(df, c("AAA", "TX"))
df
df <- rbind(df, c("AAA", "TX"))
df <- rbind(df, c("AAA", "TX"))
df
df <- rbind(df, c(hospital = "AAA", state = "TX"))
df
df <- data.frame(hospital = character(0), state = character(0))
df
df <- rbind(df, c(hospital = "AAA", state = "TX"))
df
nrow(df)
rankhospital <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
result <- lapply(states, function (state) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df[nrow(df) + 1, ] <- c(s[rank, hospitalTitle], state)
df <- df[order(df$state),]
})
result
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
rankall("heart attack", 4)
rankall <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
result <- lapply(states, function (state) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df[nrow(df) + 1, ] <- c(s[rank, hospitalTitle], state)
df <- df[order(df$state),]
})
result
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
for (state in states) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df[nrow(df) + 1, ] <- c(s[rank, hospitalTitle], state)
df <- df[order(df$state),]
}
result
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
rankall("heart attack", 4)
head(rankall("heart attack", 20), 10)
rankall <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
for (state in states) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df[nrow(df) + 1, ] <- c(s[rank, hospitalTitle], state)
df <- df[order(df$state),]
}
df
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
head(rankall("heart attack", 20), 10)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
states[1]
state <- states[1]
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df[nrow(df) + 1, ] <- c(s[rank, hospitalTitle], state)
df <- df[order(df$state),]
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df[nrow(df) + 1, ] <- c(s[rank, hospitalTitle], state)
c(s[rank, hospitalTitle], state)
df
class(c(s[rank, hospitalTitle], state))
class(s[rank, hospitalTitle])
class(state)
c(s[rank, hospitalTitle], state)
df[nrow(df) + 1, ]<-c("ww" , "as")
df<- rbind(df, c("ww" , "as"))
df <- data.frame(hospital = character(0), state = character(0))
df<- rbind(df, c("ww" , "as"))
df
df <- data.frame(hospital = character(0), state = character(0))
df <- rbind(df, data.frame("hospital" = s[rank, hospitalTitle], "state" = state))
df
rankall <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
for (state in states) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df <- rbind(df, data.frame("hospital" = s[rank, hospitalTitle], "state" = state))
}
df[order(df$state),]
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
head(rankall("heart attack", 20), 10)
ss <- rankall("heart attack", 20)
ss
ss[order(ss["state"], )]
ss[order(ss["state"]), ]
rankall <- function(outcomeName, num = "best") {
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
hospitalTitle <- "Hospital.Name"
colName <- sprintf("Hospital.30.Day.Death..Mortality..Rates.from.%s", firstLetterCap(outcomeName))
if (!colName %in% colnames(outcome)) {
stop("invalid outcome")
}
states <- unique(outcome$State)
df <- data.frame(hospital = character(0), state = character(0))
for (state in states) {
stateData <- outcome[outcome$State == state, c(hospitalTitle, colName)]
stateData[, colName] <- as.numeric(stateData[, colName])
stateData <- na.omit(stateData)
s <- stateData[order(stateData[,colName], stateData[, hospitalTitle]), ]
if (num == "best") {
rank <- 1
} else if (num == "worst") {
rank <- dim(s)[1]
} else {
rank <- num
}
df <- rbind(df, data.frame("hospital" = s[rank, hospitalTitle], "state" = state))
}
df[order(df["state"]), ]
}
firstLetterCap <- function(inStr) {
words <- strsplit(inStr, " ")[[1]]
newStr <- paste(toupper(substring(words, 1,1)), tolower(substring(words, 2)),
sep="", collapse=" ")
gsub(" ", ".", newStr)
}
head(rankall("heart attack", 20), 10)
head(rankall("pneumonia", "worst"), 3)
head(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
source("rankhospital")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
source("rankall.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
